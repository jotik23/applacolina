# Generated by Django 5.2.7 on 2025-10-24 19:48

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models
import personal.user_models


class Migration(migrations.Migration):

    replaces = [
        ('users', '0001_initial'),
        ('users', '0002_userprofile_preferred_farm'),
        ('users', '0003_userprofile_employment_start_date'),
        ('users', '0004_userprofile_employment_end_date'),
        ('users', '0005_userprofile_suggested_positions'),
        ('users', '0006_remove_userprofile_email_and_more'),
        ('users', '0007_userprofile_automatic_rest_days'),
        ('calendario', '0001_initial'),
    ]

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('granjas', '0002_alter_birdbatch_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('GALPONERO', 'Galponero'), ('CLASIFICADOR', 'Clasificador'), ('ADMINISTRADOR', 'Administrador'), ('SUPERVISOR', 'Supervisor')], max_length=32, unique=True)),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
                'ordering': ['name'],
                'db_table': 'users_role',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('cedula', models.CharField(max_length=32, unique=True)),
                ('nombres', models.CharField(max_length=150)),
                ('apellidos', models.CharField(max_length=150)),
                ('telefono', models.CharField(max_length=32, unique=True)),
                ('direccion', models.CharField(blank=True, max_length=255)),
                ('contacto_nombre', models.CharField(blank=True, max_length=150)),
                ('contacto_telefono', models.CharField(blank=True, max_length=32)),
                ('employment_start_date', models.DateField(blank=True, help_text='Fecha desde la cual el colaborador se considera activo para turnos y descansos.', null=True, verbose_name='Fecha de ingreso')),
                ('employment_end_date', models.DateField(blank=True, help_text='Si se establece, el colaborador deja de estar disponible para turnos a partir del día siguiente.', null=True, verbose_name='Fecha de retiro')),
                ('automatic_rest_days', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(choices=[(0, 'Lunes'), (1, 'Martes'), (2, 'Miércoles'), (3, 'Jueves'), (4, 'Viernes'), (5, 'Sábado'), (6, 'Domingo')]), blank=True, default=list, help_text='Bloquea las asignaciones automáticas en los días seleccionados.', size=None, verbose_name='Días de descanso automático')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('roles', models.ManyToManyField(blank=True, related_name='usuarios', to='personal.role', db_table='users_userprofile_roles')),
                ('suggested_positions', models.ManyToManyField(blank=True, help_text='Posiciones recomendadas para priorizar asignaciones automáticas.', related_name='preferred_operators', to='personal.positiondefinition', verbose_name='Posiciones sugeridas', db_table='users_userprofile_suggested_positions')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups', db_table='users_userprofile_groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions', db_table='users_userprofile_user_permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['apellidos', 'nombres'],
                'db_table': 'users_userprofile',
            },
            managers=[
                ('objects', personal.user_models.UserProfileManager()),
            ],
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_code', models.CharField(choices=[('view_users', 'Ver usuarios'), ('manage_users', 'Gestionar usuarios'), ('view_roles', 'Ver roles'), ('manage_roles', 'Gestionar roles')], max_length=64)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions', to='personal.role')),
            ],
            options={
                'verbose_name': 'Permiso por rol',
                'verbose_name_plural': 'Permisos por rol',
                'ordering': ['role__name', 'permission_code'],
                'unique_together': {('role', 'permission_code')},
                'db_table': 'users_rolepermission',
            },
        ),
        migrations.CreateModel(
            name='PositionDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Nombre')),
                ('code', models.CharField(max_length=64, unique=True, verbose_name='Código')),
                ('category', models.CharField(choices=[('GALPONERO_PRODUCCION_DIA', 'Galponero producción día'), ('GALPONERO_LEVANTE_DIA', 'Galponero levante día'), ('GALPONERO_PRODUCCION_NOCHE', 'Galponero producción noche'), ('GALPONERO_LEVANTE_NOCHE', 'Galponero levante noche'), ('CLASIFICADOR_DIA', 'Clasificador día'), ('CLASIFICADOR_NOCHE', 'Clasificador noche'), ('LIDER_GRANJA', 'Líder de granja'), ('SUPERVISOR', 'Supervisor'), ('LIDER_TECNICO', 'Líder técnico'), ('OFICIOS_VARIOS', 'Oficios varios')], max_length=64, verbose_name='Categoría')),
                ('shift_type', models.CharField(choices=[('day', 'Día'), ('night', 'Noche')], default='day', max_length=16, verbose_name='Turno')),
                ('complexity', models.CharField(choices=[('basic', 'Básico'), ('intermediate', 'Intermedio'), ('advanced', 'Avanzado')], default='basic', max_length=16, verbose_name='Complejidad')),
                ('allow_lower_complexity', models.BooleanField(default=False, verbose_name='Permitir complejidad inferior')),
                ('valid_from', models.DateField(verbose_name='Válido desde')),
                ('valid_until', models.DateField(blank=True, null=True, verbose_name='Válido hasta')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('chicken_house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='position_definitions', to='granjas.chickenhouse', verbose_name='Galpón')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='position_definitions', to='granjas.farm', verbose_name='Granja')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='position_definitions', to='granjas.room', verbose_name='Salón')),
            ],
            options={
                'verbose_name': 'Definición de posición',
                'verbose_name_plural': 'Definiciones de posiciones',
                'ordering': ('farm__name', 'code'),
                'db_table': 'calendario_positiondefinition',
            },
        ),
        migrations.CreateModel(
            name='RestRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift_type', models.CharField(choices=[('day', 'Día'), ('night', 'Noche')], default='day', max_length=16, verbose_name='Turno')),
                ('min_rest_frequency', models.PositiveSmallIntegerField(default=6, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Descanso mínimo cada X días')),
                ('min_consecutive_days', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Mínimo días consecutivos')),
                ('max_consecutive_days', models.PositiveSmallIntegerField(default=8, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Máximo días consecutivos')),
                ('post_shift_rest_days', models.PositiveSmallIntegerField(default=0, verbose_name='Posturno (días)')),
                ('monthly_rest_days', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Descansos mensuales')),
                ('enforce_additional_rest', models.BooleanField(default=False, verbose_name='Descanso adicional estricto')),
                ('active_from', models.DateField(default=django.utils.timezone.localdate, verbose_name='Vigente desde')),
                ('active_until', models.DateField(blank=True, null=True, verbose_name='Vigente hasta')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rest_rules', to='personal.role', verbose_name='Rol')),
            ],
            options={
                'verbose_name': 'Regla de descanso',
                'verbose_name_plural': 'Reglas de descanso',
                'ordering': ('role__name', 'shift_type', '-active_from'),
                'unique_together': {('role', 'shift_type', 'active_from')},
                'db_table': 'calendario_restrule',
            },
        ),
        migrations.CreateModel(
            name='ShiftAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('is_auto_assigned', models.BooleanField(default=True, verbose_name='Asignación automática')),
                ('alert_level', models.CharField(choices=[('none', 'Sin alerta'), ('warn', 'Desajuste moderado'), ('critical', 'Desajuste crítico')], default='none', max_length=16, verbose_name='Alerta')),
                ('is_overtime', models.BooleanField(default=False, verbose_name='Sobrecarga')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shift_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Operario')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assignments', to='personal.positiondefinition', verbose_name='Posición')),
            ],
            options={
                'verbose_name': 'Asignación',
                'verbose_name_plural': 'Asignaciones',
                'ordering': ('date', 'position__code'),
                'db_table': 'calendario_shiftassignment',
            },
        ),
        migrations.CreateModel(
            name='AssignmentChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('created', 'Creada'), ('updated', 'Actualizada'), ('deleted', 'Eliminada')], max_length=16, verbose_name='Tipo de cambio')),
                ('details', models.JSONField(blank=True, default=dict, verbose_name='Detalles')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignment_changes', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('new_operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_assignment_changes', to=settings.AUTH_USER_MODEL)),
                ('previous_operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_assignment_changes', to=settings.AUTH_USER_MODEL)),
                ('assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='change_logs', to='personal.shiftassignment', verbose_name='Asignación')),
            ],
            options={
                'verbose_name': 'Historial de asignación',
                'verbose_name_plural': 'Historial de asignaciones',
                'ordering': ('-created_at',),
                'db_table': 'calendario_assignmentchangelog',
            },
        ),
        migrations.CreateModel(
            name='ShiftCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, verbose_name='Nombre')),
                ('start_date', models.DateField(verbose_name='Fecha inicio')),
                ('end_date', models.DateField(verbose_name='Fecha fin')),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('approved', 'Aprobado'), ('modified', 'Modificado')], default='draft', max_length=16, verbose_name='Estado')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de aprobación')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_calendars', to=settings.AUTH_USER_MODEL, verbose_name='Aprobado por')),
                ('base_calendar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modifications', to='personal.shiftcalendar', verbose_name='Calendario base')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_calendars', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Calendario de turnos',
                'verbose_name_plural': 'Calendarios de turnos',
                'ordering': ('-start_date', '-created_at'),
                'unique_together': {('start_date', 'end_date', 'status')},
                'db_table': 'calendario_shiftcalendar',
            },
        ),
        migrations.AddField(
            model_name='shiftassignment',
            name='calendar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='personal.shiftcalendar', verbose_name='Calendario'),
        ),
        migrations.CreateModel(
            name='OperatorCapability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('GALPONERO_PRODUCCION_DIA', 'Galponero producción día'), ('GALPONERO_LEVANTE_DIA', 'Galponero levante día'), ('GALPONERO_PRODUCCION_NOCHE', 'Galponero producción noche'), ('GALPONERO_LEVANTE_NOCHE', 'Galponero levante noche'), ('CLASIFICADOR_DIA', 'Clasificador día'), ('CLASIFICADOR_NOCHE', 'Clasificador noche'), ('LIDER_GRANJA', 'Líder de granja'), ('SUPERVISOR', 'Supervisor'), ('LIDER_TECNICO', 'Líder técnico'), ('OFICIOS_VARIOS', 'Oficios varios')], max_length=64, verbose_name='Categoría')),
                ('max_complexity', models.CharField(choices=[('basic', 'Básico'), ('intermediate', 'Intermedio'), ('advanced', 'Avanzado')], default='basic', max_length=16, verbose_name='Complejidad manejada')),
                ('min_complexity', models.CharField(choices=[('basic', 'Básico'), ('intermediate', 'Intermedio'), ('advanced', 'Avanzado')], default='basic', max_length=16, verbose_name='Complejidad mínima')),
                ('effective_from', models.DateField(default=django.utils.timezone.localdate, verbose_name='Válido desde')),
                ('effective_until', models.DateField(blank=True, null=True, verbose_name='Válido hasta')),
                ('is_primary', models.BooleanField(default=True, verbose_name='Principal')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capabilities', to=settings.AUTH_USER_MODEL, verbose_name='Operario')),
            ],
            options={
                'verbose_name': 'Capacidad de operario',
                'verbose_name_plural': 'Capacidades de operarios',
                'ordering': ('operator__apellidos', 'operator__nombres', 'category'),
                'unique_together': {('operator', 'category', 'effective_from')},
                'db_table': 'calendario_operatorcapability',
            },
        ),
        migrations.CreateModel(
            name='OperatorFarmPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_weight', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Nivel de preferencia')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Preferencia principal')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operator_preferences', to='granjas.farm', verbose_name='Granja')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farm_preferences', to=settings.AUTH_USER_MODEL, verbose_name='Operario')),
            ],
            options={
                'verbose_name': 'Preferencia de granja',
                'verbose_name_plural': 'Preferencias de granja',
                'ordering': ('operator__apellidos', 'operator__nombres', 'preference_weight'),
                'unique_together': {('operator', 'farm')},
                'db_table': 'calendario_operatorfarmpreference',
            },
        ),
        migrations.CreateModel(
            name='OverloadAllowance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_consecutive_extra_days', models.PositiveSmallIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Máximo días extra')),
                ('highlight_level', models.CharField(choices=[('none', 'Sin alerta'), ('warn', 'Desajuste moderado'), ('critical', 'Desajuste crítico')], default='warn', max_length=16, verbose_name='Nivel de resaltado')),
                ('active_from', models.DateField(default=django.utils.timezone.localdate, verbose_name='Vigente desde')),
                ('active_until', models.DateField(blank=True, null=True, verbose_name='Vigente hasta')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overload_rules', to='personal.role', verbose_name='Rol')),
            ],
            options={
                'verbose_name': 'Regla de sobrecarga',
                'verbose_name_plural': 'Reglas de sobrecarga',
                'ordering': ('role__name', '-active_from'),
                'unique_together': {('role', 'active_from')},
                'db_table': 'calendario_overloadallowance',
            },
        ),
        migrations.CreateModel(
            name='RestPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Lunes'), (1, 'Martes'), (2, 'Miércoles'), (3, 'Jueves'), (4, 'Viernes'), (5, 'Sábado'), (6, 'Domingo')], verbose_name='Día de la semana')),
                ('is_required', models.BooleanField(default=False, verbose_name='Obligatorio')),
                ('rest_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferred_days', to='personal.restrule', verbose_name='Regla')),
            ],
            options={
                'verbose_name': 'Preferencia de descanso',
                'verbose_name_plural': 'Preferencias de descanso',
                'ordering': ('rest_rule', 'day_of_week'),
                'unique_together': {('rest_rule', 'day_of_week')},
                'db_table': 'calendario_restpreference',
            },
        ),
        migrations.AlterUniqueTogether(
            name='shiftassignment',
            unique_together={('calendar', 'position', 'date')},
        ),
        migrations.CreateModel(
            name='WorkloadSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_shifts', models.PositiveIntegerField(default=0, verbose_name='Turnos asignados')),
                ('day_shifts', models.PositiveIntegerField(default=0, verbose_name='Turnos diurnos')),
                ('night_shifts', models.PositiveIntegerField(default=0, verbose_name='Turnos nocturnos')),
                ('rest_days', models.PositiveIntegerField(default=0, verbose_name='Descansos')),
                ('overtime_days', models.PositiveIntegerField(default=0, verbose_name='Días extra')),
                ('month_reference', models.DateField(verbose_name='Mes de referencia')),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workload_snapshots', to='personal.shiftcalendar')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workload_snapshots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Carga de trabajo',
                'verbose_name_plural': 'Cargas de trabajo',
                'unique_together': {('calendar', 'operator', 'month_reference')},
                'db_table': 'calendario_workloadsnapshot',
            },
        ),
    ]
