# Generated by Django 5.2.7 on 2025-11-04 04:21

from django.db import migrations
from django.db.utils import ProgrammingError


def _rename_table_sql(old: str, new: str) -> tuple[str, str]:
    forward_sql = f"""
    DO $$
    BEGIN
        IF to_regclass('public.{old}') IS NOT NULL
           AND to_regclass('public.{new}') IS NULL THEN
            EXECUTE 'ALTER TABLE public.{old} RENAME TO {new}';
        END IF;
    END$$;
    """
    reverse_sql = f"""
    DO $$
    BEGIN
        IF to_regclass('public.{new}') IS NOT NULL
           AND to_regclass('public.{old}') IS NULL THEN
            EXECUTE 'ALTER TABLE public.{new} RENAME TO {old}';
        END IF;
    END$$;
    """
    return forward_sql, reverse_sql


def _ensure_core_tables(apps, schema_editor):
    connection = schema_editor.connection
    try:
        existing_tables = {table.lower() for table in connection.introspection.table_names()}
    except ProgrammingError:
        existing_tables = set()

    required_models = [
        apps.get_model("production", "Farm"),
        apps.get_model("production", "ChickenHouse"),
        apps.get_model("production", "Room"),
        apps.get_model("production", "BirdBatch"),
        apps.get_model("production", "BirdBatchRoomAllocation"),
        apps.get_model("production", "ProductionRecord"),
    ]

    for model in required_models:
        table_name = model._meta.db_table.lower()
        if table_name not in existing_tables:
            schema_editor.create_model(model)
            existing_tables.add(table_name)


class Migration(migrations.Migration):

    dependencies = [
        ("production", "0002_productionrecord_bird_batch"),
    ]

    operations = [
        migrations.RunSQL(*_rename_table_sql("granjas_farm", "production_farm")),
        migrations.RunSQL(
            *_rename_table_sql("granjas_chickenhouse", "production_chickenhouse")
        ),
        migrations.RunSQL(*_rename_table_sql("granjas_room", "production_room")),
        migrations.RunSQL(*_rename_table_sql("granjas_birdbatch", "production_birdbatch")),
        migrations.RunSQL(
            *_rename_table_sql(
                "granjas_birdbatchroomallocation",
                "production_birdbatchroomallocation",
            )
        ),
        migrations.RunPython(_ensure_core_tables, migrations.RunPython.noop),
    ]
