# Generated by Django 5.2.7 on 2025-11-04 04:21

from django.db import migrations


def _rename_table_sql(old: str, new: str) -> tuple[str, str]:
    forward_sql = f"""
    DO $$
    BEGIN
        IF to_regclass('public.{old}') IS NOT NULL
           AND to_regclass('public.{new}') IS NULL THEN
            EXECUTE 'ALTER TABLE public.{old} RENAME TO {new}';
        END IF;
    END$$;
    """
    reverse_sql = f"""
    DO $$
    BEGIN
        IF to_regclass('public.{new}') IS NOT NULL
           AND to_regclass('public.{old}') IS NULL THEN
            EXECUTE 'ALTER TABLE public.{new} RENAME TO {old}';
        END IF;
    END$$;
    """
    return forward_sql, reverse_sql


class Migration(migrations.Migration):

    dependencies = [
        ("production", "0002_productionrecord_bird_batch"),
    ]

    operations = [
        migrations.RunSQL(*_rename_table_sql("granjas_farm", "production_farm")),
        migrations.RunSQL(
            *_rename_table_sql("granjas_chickenhouse", "production_chickenhouse")
        ),
        migrations.RunSQL(*_rename_table_sql("granjas_room", "production_room")),
        migrations.RunSQL(*_rename_table_sql("granjas_birdbatch", "production_birdbatch")),
        migrations.RunSQL(
            *_rename_table_sql(
                "granjas_birdbatchroomallocation",
                "production_birdbatchroomallocation",
            )
        ),
    ]
